// Ã¬Â¤â€˜Ã«Â³ÂµÃ¬ï¿½Â´ Ã¬â€”â€ Ã«Å â€�ÃªÂ°â‚¬: Ã«Â¬Â¸Ã¬Å¾ï¿½Ã¬â€”Â´Ã¬ï¿½Â´ Ã¬Â£Â¼Ã¬â€“Â´Ã¬Â¡Å’Ã¬ï¿½â€ž Ã«â€¢Å’, Ã¬ï¿½Â´ Ã«Â¬Â¸Ã¬Å¾ï¿½Ã¬â€”Â´Ã¬â€”ï¿½ ÃªÂ°â„¢Ã¬ï¿½â‚¬ Ã«Â¬Â¸Ã¬Å¾ï¿½ÃªÂ°â‚¬ Ã¬Â¤â€˜Ã«Â³ÂµÃ«ï¿½ËœÃ¬â€“Â´ Ã«â€œÂ±Ã¬Å¾Â¥Ã­â€¢ËœÃ«Å â€�Ã¬Â§â‚¬ Ã­â„¢â€¢Ã¬ï¿½Â¸Ã­â€¢ËœÃ«Å â€� Ã¬â€¢Å’ÃªÂ³Â Ã«Â¦Â¬Ã¬Â¦ËœÃ¬ï¿½â€ž Ã¬Å¾â€˜Ã¬â€žÂ±Ã­â€¢ËœÃ«ï¿½Â¼. 
// Ã¬Å¾ï¿½Ã«Â£Å’ ÃªÂµÂ¬Ã¬Â¡Â°Ã«Â¥Â¼ Ã¬Â¶â€�ÃªÂ°â‚¬Ã«Â¡Å“ Ã¬â€šÂ¬Ã¬Å¡Â©Ã­â€¢ËœÃ¬Â§â‚¬ Ã¬â€¢Å ÃªÂ³Â  Ã­â€™â‚¬ Ã¬Ë†Ëœ Ã¬Å¾Ë†Ã«Å â€� Ã¬â€¢Å’ÃªÂ³Â Ã«Â¦Â¬Ã¬Â¦Ëœ Ã«Ëœï¿½Ã­â€¢Å“ ÃªÂ³Â Ã«Â¯Â¼Ã­â€¢ËœÃ«ï¿½Â¼.
// Hint 1: hashtable Ã¬ï¿½â€ž Ã¬ï¿½Â´Ã¬Å¡Â©Ã­â€¢Â´Ã«Â³Â´Ã«ï¿½Â¼
// Hint 2: Ã«Â¹â€žÃ­Å Â¸ Ã«Â²Â¡Ã­â€žÂ°ÃªÂ°â‚¬ Ã¬Å“Â Ã¬Å¡Â©Ã­â€¢Å“ÃªÂ°â‚¬?
// Hint 3: O(N log N) Ã¬â€¹Å“ÃªÂ°â€ž Ã¬â€¢Ë†Ã¬â€”ï¿½ Ã­â€™â‚¬ Ã¬Ë†Ëœ Ã¬Å¾Ë†ÃªÂ²Â Ã«Å â€�ÃªÂ°â‚¬?
package Q1_01_Is_Unique;


class QuestionA{
	public static Boolean isUniqueChars(String word) {
		//charÃ¬ï¿½â€ž Ã­â€¢Â´Ã¬â€°Â¬ Ã­â€¦Å’Ã¬ï¿½Â´Ã«Â¸â€�Ã«Â¡Å“ ÃªÂµÂ¬Ã¬â€žÂ±.
		//ÃªÂ·Â¸Ã«â€¹Â¤Ã¬ï¿½Å’Ã¬â€”ï¿½ ÃªÂ·Â¸ÃªÂ±Â¸ ÃªÂ°â‚¬Ã¬Â§â‚¬ÃªÂ³Â  Ã«Â¦Â¬Ã­â€žÂ´ Ã­â€¢Â¨
		Boolean[] hash_table = new Boolean[26];
		
		for(int i=0;i<word.length();i++) {
			if(hash_table[word.charAt(i)-'a'] != null) return false;
			else {
				hash_table[word.charAt(i)-'a'] = true;
			}
		}
		return true;
	}
	public static void main() {
		String[] words = {"abcde", "hello", "apple", "kite", "padle"};
		for(String a_word: words) {
			System.out.println(a_word + " is " + isUniqueChars(a_word));	
		}
	}
}